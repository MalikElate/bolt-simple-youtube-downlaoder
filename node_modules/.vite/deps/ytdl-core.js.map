{
  "version": 3,
  "sources": ["browser-external:stream", "browser-external:querystring", "../../sax/lib/sax.js", "browser-external:http", "browser-external:https", "../../miniget/src/index.ts", "../../ytdl-core/package.json", "../../ytdl-core/lib/utils.js", "browser-external:timers", "../../ytdl-core/lib/formats.js", "../../ytdl-core/lib/format-utils.js", "../../ytdl-core/lib/url-utils.js", "../../m3u8stream/src/m3u8-parser.ts", "../../m3u8stream/src/parse-time.ts", "../../m3u8stream/src/dash-mpd-parser.ts", "../../m3u8stream/src/queue.ts", "../../m3u8stream/src/index.ts", "../../ytdl-core/lib/info-extras.js", "../../ytdl-core/lib/cache.js", "browser-external:vm", "../../ytdl-core/lib/sig.js", "../../ytdl-core/lib/info.js", "../../ytdl-core/lib/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"stream\" has been externalized for browser compatibility. Cannot access \"stream.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"querystring\" has been externalized for browser compatibility. Cannot access \"querystring.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", ";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n  if (!Stream) Stream = function () {}\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            if (parser.opt.unparsedEntities) {\n              var parsedEntity = parseEntity(parser)\n              parser.entity = ''\n              parser.state = returnState\n              parser.write(parsedEntity)\n            } else {\n              parser[buffer] += parseEntity(parser)\n              parser.entity = ''\n              parser.state = returnState\n            }\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default: /* istanbul ignore next */ {\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n        }\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", null, "{\n  \"name\": \"ytdl-core\",\n  \"description\": \"YouTube video downloader in pure javascript.\",\n  \"keywords\": [\n    \"youtube\",\n    \"video\",\n    \"download\"\n  ],\n  \"version\": \"4.11.5\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/fent/node-ytdl-core.git\"\n  },\n  \"author\": \"fent <fentbox@gmail.com> (https://github.com/fent)\",\n  \"contributors\": [\n    \"Tobias Kutscha (https://github.com/TimeForANinja)\",\n    \"Andrew Kelley (https://github.com/andrewrk)\",\n    \"Mauricio Allende (https://github.com/mallendeo)\",\n    \"Rodrigo Altamirano (https://github.com/raltamirano)\",\n    \"Jim Buck (https://github.com/JimmyBoh)\",\n    \"Paweł Ruciński (https://github.com/Roki100)\",\n    \"Alexander Paolini (https://github.com/Million900o)\"\n  ],\n  \"main\": \"./lib/index.js\",\n  \"types\": \"./typings/index.d.ts\",\n  \"files\": [\n    \"lib\",\n    \"typings\"\n  ],\n  \"scripts\": {\n    \"test\": \"nyc --reporter=lcov --reporter=text-summary npm run test:unit\",\n    \"test:unit\": \"mocha --ignore test/irl-test.js test/*-test.js --timeout 4000\",\n    \"test:irl\": \"mocha --timeout 16000 test/irl-test.js\",\n    \"lint\": \"eslint ./\",\n    \"lint:fix\": \"eslint --fix ./\",\n    \"lint:typings\": \"tslint typings/index.d.ts\",\n    \"lint:typings:fix\": \"tslint --fix typings/index.d.ts\"\n  },\n  \"dependencies\": {\n    \"m3u8stream\": \"^0.8.6\",\n    \"miniget\": \"^4.2.2\",\n    \"sax\": \"^1.1.3\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^13.1.0\",\n    \"assert-diff\": \"^3.0.1\",\n    \"dtslint\": \"^3.6.14\",\n    \"eslint\": \"^6.8.0\",\n    \"mocha\": \"^7.0.0\",\n    \"muk-require\": \"^1.2.0\",\n    \"nock\": \"^13.0.4\",\n    \"nyc\": \"^15.0.0\",\n    \"sinon\": \"^9.0.0\",\n    \"stream-equal\": \"~1.1.0\",\n    \"typescript\": \"^3.9.7\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  },\n  \"license\": \"MIT\"\n}\n", "const miniget = require('miniget');\n\n\n/**\n * Extract string inbetween another.\n *\n * @param {string} haystack\n * @param {string} left\n * @param {string} right\n * @returns {string}\n */\nexports.between = (haystack, left, right) => {\n  let pos;\n  if (left instanceof RegExp) {\n    const match = haystack.match(left);\n    if (!match) { return ''; }\n    pos = match.index + match[0].length;\n  } else {\n    pos = haystack.indexOf(left);\n    if (pos === -1) { return ''; }\n    pos += left.length;\n  }\n  haystack = haystack.slice(pos);\n  pos = haystack.indexOf(right);\n  if (pos === -1) { return ''; }\n  haystack = haystack.slice(0, pos);\n  return haystack;\n};\n\n\n/**\n * Get a number from an abbreviated number string.\n *\n * @param {string} string\n * @returns {number}\n */\nexports.parseAbbreviatedNumber = string => {\n  const match = string\n    .replace(',', '.')\n    .replace(' ', '')\n    .match(/([\\d,.]+)([MK]?)/);\n  if (match) {\n    let [, num, multi] = match;\n    num = parseFloat(num);\n    return Math.round(multi === 'M' ? num * 1000000 :\n      multi === 'K' ? num * 1000 : num);\n  }\n  return null;\n};\n\n/**\n * Escape sequences for cutAfterJS\n * @param {string} start the character string the escape sequence\n * @param {string} end the character string to stop the escape seequence\n * @param {undefined|Regex} startPrefix a regex to check against the preceding 10 characters\n */\nconst ESCAPING_SEQUENZES = [\n  // Strings\n  { start: '\"', end: '\"' },\n  { start: \"'\", end: \"'\" },\n  { start: '`', end: '`' },\n  // RegeEx\n  { start: '/', end: '/', startPrefix: /(^|[[{:;,/])\\s?$/ },\n];\n\n/**\n * Match begin and end braces of input JS, return only JS\n *\n * @param {string} mixedJson\n * @returns {string}\n*/\nexports.cutAfterJS = mixedJson => {\n  // Define the general open and closing tag\n  let open, close;\n  if (mixedJson[0] === '[') {\n    open = '[';\n    close = ']';\n  } else if (mixedJson[0] === '{') {\n    open = '{';\n    close = '}';\n  }\n\n  if (!open) {\n    throw new Error(`Can't cut unsupported JSON (need to begin with [ or { ) but got: ${mixedJson[0]}`);\n  }\n\n  // States if the loop is currently inside an escaped js object\n  let isEscapedObject = null;\n\n  // States if the current character is treated as escaped or not\n  let isEscaped = false;\n\n  // Current open brackets to be closed\n  let counter = 0;\n\n  let i;\n  // Go through all characters from the start\n  for (i = 0; i < mixedJson.length; i++) {\n    // End of current escaped object\n    if (!isEscaped && isEscapedObject !== null && mixedJson[i] === isEscapedObject.end) {\n      isEscapedObject = null;\n      continue;\n    // Might be the start of a new escaped object\n    } else if (!isEscaped && isEscapedObject === null) {\n      for (const escaped of ESCAPING_SEQUENZES) {\n        if (mixedJson[i] !== escaped.start) continue;\n        // Test startPrefix against last 10 characters\n        if (!escaped.startPrefix || mixedJson.substring(i - 10, i).match(escaped.startPrefix)) {\n          isEscapedObject = escaped;\n          break;\n        }\n      }\n      // Continue if we found a new escaped object\n      if (isEscapedObject !== null) {\n        continue;\n      }\n    }\n\n    // Toggle the isEscaped boolean for every backslash\n    // Reset for every regular character\n    isEscaped = mixedJson[i] === '\\\\' && !isEscaped;\n\n    if (isEscapedObject !== null) continue;\n\n    if (mixedJson[i] === open) {\n      counter++;\n    } else if (mixedJson[i] === close) {\n      counter--;\n    }\n\n    // All brackets have been closed, thus end of JSON is reached\n    if (counter === 0) {\n      // Return the cut JSON\n      return mixedJson.substring(0, i + 1);\n    }\n  }\n\n  // We ran through the whole string and ended up with an unclosed bracket\n  throw Error(\"Can't cut unsupported JSON (no matching closing bracket found)\");\n};\n\n\n/**\n * Checks if there is a playability error.\n *\n * @param {Object} player_response\n * @param {Array.<string>} statuses\n * @param {Error} ErrorType\n * @returns {!Error}\n */\nexports.playError = (player_response, statuses, ErrorType = Error) => {\n  let playability = player_response && player_response.playabilityStatus;\n  if (playability && statuses.includes(playability.status)) {\n    return new ErrorType(playability.reason || (playability.messages && playability.messages[0]));\n  }\n  return null;\n};\n\n/**\n * Does a miniget request and calls options.requestCallback if present\n *\n * @param {string} url the request url\n * @param {Object} options an object with optional requestOptions and requestCallback parameters\n * @param {Object} requestOptionsOverwrite overwrite of options.requestOptions\n * @returns {miniget.Stream}\n */\nexports.exposedMiniget = (url, options = {}, requestOptionsOverwrite) => {\n  const req = miniget(url, requestOptionsOverwrite || options.requestOptions);\n  if (typeof options.requestCallback === 'function') options.requestCallback(req);\n  return req;\n};\n\n/**\n * Temporary helper to help deprecating a few properties.\n *\n * @param {Object} obj\n * @param {string} prop\n * @param {Object} value\n * @param {string} oldPath\n * @param {string} newPath\n */\nexports.deprecate = (obj, prop, value, oldPath, newPath) => {\n  Object.defineProperty(obj, prop, {\n    get: () => {\n      console.warn(`\\`${oldPath}\\` will be removed in a near future release, ` +\n        `use \\`${newPath}\\` instead.`);\n      return value;\n    },\n  });\n};\n\n\n// Check for updates.\nconst pkg = require('../package.json');\nconst UPDATE_INTERVAL = 1000 * 60 * 60 * 12;\nexports.lastUpdateCheck = 0;\nexports.checkForUpdates = () => {\n  if (!process.env.YTDL_NO_UPDATE && !pkg.version.startsWith('0.0.0-') &&\n    Date.now() - exports.lastUpdateCheck >= UPDATE_INTERVAL) {\n    exports.lastUpdateCheck = Date.now();\n    return miniget('https://api.github.com/repos/fent/node-ytdl-core/releases/latest', {\n      headers: { 'User-Agent': 'ytdl-core' },\n    }).text().then(response => {\n      if (JSON.parse(response).tag_name !== `v${pkg.version}`) {\n        console.warn('\\x1b[33mWARNING:\\x1B[0m ytdl-core is out of date! Update with \"npm install ytdl-core@latest\".');\n      }\n    }, err => {\n      console.warn('Error checking for updates:', err.message);\n      console.warn('You can disable this check by setting the `YTDL_NO_UPDATE` env variable.');\n    });\n  }\n  return null;\n};\n\n\n/**\n * Gets random IPv6 Address from a block\n *\n * @param {string} ip the IPv6 block in CIDR-Notation\n * @returns {string}\n */\nexports.getRandomIPv6 = ip => {\n  // Start with a fast Regex-Check\n  if (!isIPv6(ip)) throw Error('Invalid IPv6 format');\n  // Start by splitting and normalizing addr and mask\n  const [rawAddr, rawMask] = ip.split('/');\n  let base10Mask = parseInt(rawMask);\n  if (!base10Mask || base10Mask > 128 || base10Mask < 24) throw Error('Invalid IPv6 subnet');\n  const base10addr = normalizeIP(rawAddr);\n  // Get random addr to pad with\n  // using Math.random since we're not requiring high level of randomness\n  const randomAddr = new Array(8).fill(1).map(() => Math.floor(Math.random() * 0xffff));\n\n  // Merge base10addr with randomAddr\n  const mergedAddr = randomAddr.map((randomItem, idx) => {\n    // Calculate the amount of static bits\n    const staticBits = Math.min(base10Mask, 16);\n    // Adjust the bitmask with the staticBits\n    base10Mask -= staticBits;\n    // Calculate the bitmask\n    // lsb makes the calculation way more complicated\n    const mask = 0xffff - ((2 ** (16 - staticBits)) - 1);\n    // Combine base10addr and random\n    return (base10addr[idx] & mask) + (randomItem & (mask ^ 0xffff));\n  });\n  // Return new addr\n  return mergedAddr.map(x => x.toString('16')).join(':');\n};\n\n\n// eslint-disable-next-line max-len\nconst IPV6_REGEX = /^(([0-9a-f]{1,4}:)(:[0-9a-f]{1,4}){1,6}|([0-9a-f]{1,4}:){1,2}(:[0-9a-f]{1,4}){1,5}|([0-9a-f]{1,4}:){1,3}(:[0-9a-f]{1,4}){1,4}|([0-9a-f]{1,4}:){1,4}(:[0-9a-f]{1,4}){1,3}|([0-9a-f]{1,4}:){1,5}(:[0-9a-f]{1,4}){1,2}|([0-9a-f]{1,4}:){1,6}(:[0-9a-f]{1,4})|([0-9a-f]{1,4}:){1,7}(([0-9a-f]{1,4})|:))\\/(1[0-1]\\d|12[0-8]|\\d{1,2})$/;\n/**\n * Quick check for a valid IPv6\n * The Regex only accepts a subset of all IPv6 Addresses\n *\n * @param {string} ip the IPv6 block in CIDR-Notation to test\n * @returns {boolean} true if valid\n */\nconst isIPv6 = exports.isIPv6 = ip => IPV6_REGEX.test(ip);\n\n\n/**\n * Normalise an IP Address\n *\n * @param {string} ip the IPv6 Addr\n * @returns {number[]} the 8 parts of the IPv6 as Integers\n */\nconst normalizeIP = exports.normalizeIP = ip => {\n  // Split by fill position\n  const parts = ip.split('::').map(x => x.split(':'));\n  // Normalize start and end\n  const partStart = parts[0] || [];\n  const partEnd = parts[1] || [];\n  partEnd.reverse();\n  // Placeholder for full ip\n  const fullIP = new Array(8).fill(0);\n  // Fill in start and end parts\n  for (let i = 0; i < Math.min(partStart.length, 8); i++) {\n    fullIP[i] = parseInt(partStart[i], 16) || 0;\n  }\n  for (let i = 0; i < Math.min(partEnd.length, 8); i++) {\n    fullIP[7 - i] = parseInt(partEnd[i], 16) || 0;\n  }\n  return fullIP;\n};\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"timers\" has been externalized for browser compatibility. Cannot access \"timers.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/**\n * http://en.wikipedia.org/wiki/YouTube#Quality_and_formats\n */\nmodule.exports = {\n\n  5: {\n    mimeType: 'video/flv; codecs=\"Sorenson H.283, mp3\"',\n    qualityLabel: '240p',\n    bitrate: 250000,\n    audioBitrate: 64,\n  },\n\n  6: {\n    mimeType: 'video/flv; codecs=\"Sorenson H.263, mp3\"',\n    qualityLabel: '270p',\n    bitrate: 800000,\n    audioBitrate: 64,\n  },\n\n  13: {\n    mimeType: 'video/3gp; codecs=\"MPEG-4 Visual, aac\"',\n    qualityLabel: null,\n    bitrate: 500000,\n    audioBitrate: null,\n  },\n\n  17: {\n    mimeType: 'video/3gp; codecs=\"MPEG-4 Visual, aac\"',\n    qualityLabel: '144p',\n    bitrate: 50000,\n    audioBitrate: 24,\n  },\n\n  18: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '360p',\n    bitrate: 500000,\n    audioBitrate: 96,\n  },\n\n  22: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 2000000,\n    audioBitrate: 192,\n  },\n\n  34: {\n    mimeType: 'video/flv; codecs=\"H.264, aac\"',\n    qualityLabel: '360p',\n    bitrate: 500000,\n    audioBitrate: 128,\n  },\n\n  35: {\n    mimeType: 'video/flv; codecs=\"H.264, aac\"',\n    qualityLabel: '480p',\n    bitrate: 800000,\n    audioBitrate: 128,\n  },\n\n  36: {\n    mimeType: 'video/3gp; codecs=\"MPEG-4 Visual, aac\"',\n    qualityLabel: '240p',\n    bitrate: 175000,\n    audioBitrate: 32,\n  },\n\n  37: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '1080p',\n    bitrate: 3000000,\n    audioBitrate: 192,\n  },\n\n  38: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '3072p',\n    bitrate: 3500000,\n    audioBitrate: 192,\n  },\n\n  43: {\n    mimeType: 'video/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '360p',\n    bitrate: 500000,\n    audioBitrate: 128,\n  },\n\n  44: {\n    mimeType: 'video/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '480p',\n    bitrate: 1000000,\n    audioBitrate: 128,\n  },\n\n  45: {\n    mimeType: 'video/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '720p',\n    bitrate: 2000000,\n    audioBitrate: 192,\n  },\n\n  46: {\n    mimeType: 'audio/webm; codecs=\"vp8, vorbis\"',\n    qualityLabel: '1080p',\n    bitrate: null,\n    audioBitrate: 192,\n  },\n\n  82: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '360p',\n    bitrate: 500000,\n    audioBitrate: 96,\n  },\n\n  83: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '240p',\n    bitrate: 500000,\n    audioBitrate: 96,\n  },\n\n  84: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 2000000,\n    audioBitrate: 192,\n  },\n\n  85: {\n    mimeType: 'video/mp4; codecs=\"H.264, aac\"',\n    qualityLabel: '1080p',\n    bitrate: 3000000,\n    audioBitrate: 192,\n  },\n\n  91: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '144p',\n    bitrate: 100000,\n    audioBitrate: 48,\n  },\n\n  92: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '240p',\n    bitrate: 150000,\n    audioBitrate: 48,\n  },\n\n  93: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '360p',\n    bitrate: 500000,\n    audioBitrate: 128,\n  },\n\n  94: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '480p',\n    bitrate: 800000,\n    audioBitrate: 128,\n  },\n\n  95: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 1500000,\n    audioBitrate: 256,\n  },\n\n  96: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '1080p',\n    bitrate: 2500000,\n    audioBitrate: 256,\n  },\n\n  100: {\n    mimeType: 'audio/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '360p',\n    bitrate: null,\n    audioBitrate: 128,\n  },\n\n  101: {\n    mimeType: 'audio/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '360p',\n    bitrate: null,\n    audioBitrate: 192,\n  },\n\n  102: {\n    mimeType: 'audio/webm; codecs=\"VP8, vorbis\"',\n    qualityLabel: '720p',\n    bitrate: null,\n    audioBitrate: 192,\n  },\n\n  120: {\n    mimeType: 'video/flv; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 2000000,\n    audioBitrate: 128,\n  },\n\n  127: {\n    mimeType: 'audio/ts; codecs=\"aac\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 96,\n  },\n\n  128: {\n    mimeType: 'audio/ts; codecs=\"aac\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 96,\n  },\n\n  132: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '240p',\n    bitrate: 150000,\n    audioBitrate: 48,\n  },\n\n  133: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '240p',\n    bitrate: 200000,\n    audioBitrate: null,\n  },\n\n  134: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '360p',\n    bitrate: 300000,\n    audioBitrate: null,\n  },\n\n  135: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '480p',\n    bitrate: 500000,\n    audioBitrate: null,\n  },\n\n  136: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '720p',\n    bitrate: 1000000,\n    audioBitrate: null,\n  },\n\n  137: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '1080p',\n    bitrate: 2500000,\n    audioBitrate: null,\n  },\n\n  138: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '4320p',\n    bitrate: 13500000,\n    audioBitrate: null,\n  },\n\n  139: {\n    mimeType: 'audio/mp4; codecs=\"aac\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 48,\n  },\n\n  140: {\n    mimeType: 'audio/m4a; codecs=\"aac\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 128,\n  },\n\n  141: {\n    mimeType: 'audio/mp4; codecs=\"aac\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 256,\n  },\n\n  151: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 50000,\n    audioBitrate: 24,\n  },\n\n  160: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '144p',\n    bitrate: 100000,\n    audioBitrate: null,\n  },\n\n  171: {\n    mimeType: 'audio/webm; codecs=\"vorbis\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 128,\n  },\n\n  172: {\n    mimeType: 'audio/webm; codecs=\"vorbis\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 192,\n  },\n\n  242: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '240p',\n    bitrate: 100000,\n    audioBitrate: null,\n  },\n\n  243: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '360p',\n    bitrate: 250000,\n    audioBitrate: null,\n  },\n\n  244: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '480p',\n    bitrate: 500000,\n    audioBitrate: null,\n  },\n\n  247: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '720p',\n    bitrate: 700000,\n    audioBitrate: null,\n  },\n\n  248: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1080p',\n    bitrate: 1500000,\n    audioBitrate: null,\n  },\n\n  249: {\n    mimeType: 'audio/webm; codecs=\"opus\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 48,\n  },\n\n  250: {\n    mimeType: 'audio/webm; codecs=\"opus\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 64,\n  },\n\n  251: {\n    mimeType: 'audio/webm; codecs=\"opus\"',\n    qualityLabel: null,\n    bitrate: null,\n    audioBitrate: 160,\n  },\n\n  264: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '1440p',\n    bitrate: 4000000,\n    audioBitrate: null,\n  },\n\n  266: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '2160p',\n    bitrate: 12500000,\n    audioBitrate: null,\n  },\n\n  271: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1440p',\n    bitrate: 9000000,\n    audioBitrate: null,\n  },\n\n  272: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '4320p',\n    bitrate: 20000000,\n    audioBitrate: null,\n  },\n\n  278: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '144p 30fps',\n    bitrate: 80000,\n    audioBitrate: null,\n  },\n\n  298: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '720p',\n    bitrate: 3000000,\n    audioBitrate: null,\n  },\n\n  299: {\n    mimeType: 'video/mp4; codecs=\"H.264\"',\n    qualityLabel: '1080p',\n    bitrate: 5500000,\n    audioBitrate: null,\n  },\n\n  300: {\n    mimeType: 'video/ts; codecs=\"H.264, aac\"',\n    qualityLabel: '720p',\n    bitrate: 1318000,\n    audioBitrate: 48,\n  },\n\n  302: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '720p HFR',\n    bitrate: 2500000,\n    audioBitrate: null,\n  },\n\n  303: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1080p HFR',\n    bitrate: 5000000,\n    audioBitrate: null,\n  },\n\n  308: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1440p HFR',\n    bitrate: 10000000,\n    audioBitrate: null,\n  },\n\n  313: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '2160p',\n    bitrate: 13000000,\n    audioBitrate: null,\n  },\n\n  315: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '2160p HFR',\n    bitrate: 20000000,\n    audioBitrate: null,\n  },\n\n  330: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '144p HDR, HFR',\n    bitrate: 80000,\n    audioBitrate: null,\n  },\n\n  331: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '240p HDR, HFR',\n    bitrate: 100000,\n    audioBitrate: null,\n  },\n\n  332: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '360p HDR, HFR',\n    bitrate: 250000,\n    audioBitrate: null,\n  },\n\n  333: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '240p HDR, HFR',\n    bitrate: 500000,\n    audioBitrate: null,\n  },\n\n  334: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '720p HDR, HFR',\n    bitrate: 1000000,\n    audioBitrate: null,\n  },\n\n  335: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1080p HDR, HFR',\n    bitrate: 1500000,\n    audioBitrate: null,\n  },\n\n  336: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '1440p HDR, HFR',\n    bitrate: 5000000,\n    audioBitrate: null,\n  },\n\n  337: {\n    mimeType: 'video/webm; codecs=\"VP9\"',\n    qualityLabel: '2160p HDR, HFR',\n    bitrate: 12000000,\n    audioBitrate: null,\n  },\n\n};\n", "const utils = require('./utils');\nconst FORMATS = require('./formats');\n\n\n// Use these to help sort formats, higher index is better.\nconst audioEncodingRanks = [\n  'mp4a',\n  'mp3',\n  'vorbis',\n  'aac',\n  'opus',\n  'flac',\n];\nconst videoEncodingRanks = [\n  'mp4v',\n  'avc1',\n  'Sorenson H.283',\n  'MPEG-4 Visual',\n  'VP8',\n  'VP9',\n  'H.264',\n];\n\nconst getVideoBitrate = format => format.bitrate || 0;\nconst getVideoEncodingRank = format =>\n  videoEncodingRanks.findIndex(enc => format.codecs && format.codecs.includes(enc));\nconst getAudioBitrate = format => format.audioBitrate || 0;\nconst getAudioEncodingRank = format =>\n  audioEncodingRanks.findIndex(enc => format.codecs && format.codecs.includes(enc));\n\n\n/**\n * Sort formats by a list of functions.\n *\n * @param {Object} a\n * @param {Object} b\n * @param {Array.<Function>} sortBy\n * @returns {number}\n */\nconst sortFormatsBy = (a, b, sortBy) => {\n  let res = 0;\n  for (let fn of sortBy) {\n    res = fn(b) - fn(a);\n    if (res !== 0) {\n      break;\n    }\n  }\n  return res;\n};\n\n\nconst sortFormatsByVideo = (a, b) => sortFormatsBy(a, b, [\n  format => parseInt(format.qualityLabel),\n  getVideoBitrate,\n  getVideoEncodingRank,\n]);\n\n\nconst sortFormatsByAudio = (a, b) => sortFormatsBy(a, b, [\n  getAudioBitrate,\n  getAudioEncodingRank,\n]);\n\n\n/**\n * Sort formats from highest quality to lowest.\n *\n * @param {Object} a\n * @param {Object} b\n * @returns {number}\n */\nexports.sortFormats = (a, b) => sortFormatsBy(a, b, [\n  // Formats with both video and audio are ranked highest.\n  format => +!!format.isHLS,\n  format => +!!format.isDashMPD,\n  format => +(format.contentLength > 0),\n  format => +(format.hasVideo && format.hasAudio),\n  format => +format.hasVideo,\n  format => parseInt(format.qualityLabel) || 0,\n  getVideoBitrate,\n  getAudioBitrate,\n  getVideoEncodingRank,\n  getAudioEncodingRank,\n]);\n\n\n/**\n * Choose a format depending on the given options.\n *\n * @param {Array.<Object>} formats\n * @param {Object} options\n * @returns {Object}\n * @throws {Error} when no format matches the filter/format rules\n */\nexports.chooseFormat = (formats, options) => {\n  if (typeof options.format === 'object') {\n    if (!options.format.url) {\n      throw Error('Invalid format given, did you use `ytdl.getInfo()`?');\n    }\n    return options.format;\n  }\n\n  if (options.filter) {\n    formats = exports.filterFormats(formats, options.filter);\n  }\n\n  // We currently only support HLS-Formats for livestreams\n  // So we (now) remove all non-HLS streams\n  if (formats.some(fmt => fmt.isHLS)) {\n    formats = formats.filter(fmt => fmt.isHLS || !fmt.isLive);\n  }\n\n  let format;\n  const quality = options.quality || 'highest';\n  switch (quality) {\n    case 'highest':\n      format = formats[0];\n      break;\n\n    case 'lowest':\n      format = formats[formats.length - 1];\n      break;\n\n    case 'highestaudio': {\n      formats = exports.filterFormats(formats, 'audio');\n      formats.sort(sortFormatsByAudio);\n      // Filter for only the best audio format\n      const bestAudioFormat = formats[0];\n      formats = formats.filter(f => sortFormatsByAudio(bestAudioFormat, f) === 0);\n      // Check for the worst video quality for the best audio quality and pick according\n      // This does not loose default sorting of video encoding and bitrate\n      const worstVideoQuality = formats.map(f => parseInt(f.qualityLabel) || 0).sort((a, b) => a - b)[0];\n      format = formats.find(f => (parseInt(f.qualityLabel) || 0) === worstVideoQuality);\n      break;\n    }\n\n    case 'lowestaudio':\n      formats = exports.filterFormats(formats, 'audio');\n      formats.sort(sortFormatsByAudio);\n      format = formats[formats.length - 1];\n      break;\n\n    case 'highestvideo': {\n      formats = exports.filterFormats(formats, 'video');\n      formats.sort(sortFormatsByVideo);\n      // Filter for only the best video format\n      const bestVideoFormat = formats[0];\n      formats = formats.filter(f => sortFormatsByVideo(bestVideoFormat, f) === 0);\n      // Check for the worst audio quality for the best video quality and pick according\n      // This does not loose default sorting of audio encoding and bitrate\n      const worstAudioQuality = formats.map(f => f.audioBitrate || 0).sort((a, b) => a - b)[0];\n      format = formats.find(f => (f.audioBitrate || 0) === worstAudioQuality);\n      break;\n    }\n\n    case 'lowestvideo':\n      formats = exports.filterFormats(formats, 'video');\n      formats.sort(sortFormatsByVideo);\n      format = formats[formats.length - 1];\n      break;\n\n    default:\n      format = getFormatByQuality(quality, formats);\n      break;\n  }\n\n  if (!format) {\n    throw Error(`No such format found: ${quality}`);\n  }\n  return format;\n};\n\n/**\n * Gets a format based on quality or array of quality's\n *\n * @param {string|[string]} quality\n * @param {[Object]} formats\n * @returns {Object}\n */\nconst getFormatByQuality = (quality, formats) => {\n  let getFormat = itag => formats.find(format => `${format.itag}` === `${itag}`);\n  if (Array.isArray(quality)) {\n    return getFormat(quality.find(q => getFormat(q)));\n  } else {\n    return getFormat(quality);\n  }\n};\n\n\n/**\n * @param {Array.<Object>} formats\n * @param {Function} filter\n * @returns {Array.<Object>}\n */\nexports.filterFormats = (formats, filter) => {\n  let fn;\n  switch (filter) {\n    case 'videoandaudio':\n    case 'audioandvideo':\n      fn = format => format.hasVideo && format.hasAudio;\n      break;\n\n    case 'video':\n      fn = format => format.hasVideo;\n      break;\n\n    case 'videoonly':\n      fn = format => format.hasVideo && !format.hasAudio;\n      break;\n\n    case 'audio':\n      fn = format => format.hasAudio;\n      break;\n\n    case 'audioonly':\n      fn = format => !format.hasVideo && format.hasAudio;\n      break;\n\n    default:\n      if (typeof filter === 'function') {\n        fn = filter;\n      } else {\n        throw TypeError(`Given filter (${filter}) is not supported`);\n      }\n  }\n  return formats.filter(format => !!format.url && fn(format));\n};\n\n\n/**\n * @param {Object} format\n * @returns {Object}\n */\nexports.addFormatMeta = format => {\n  format = Object.assign({}, FORMATS[format.itag], format);\n  format.hasVideo = !!format.qualityLabel;\n  format.hasAudio = !!format.audioBitrate;\n  format.container = format.mimeType ?\n    format.mimeType.split(';')[0].split('/')[1] : null;\n  format.codecs = format.mimeType ?\n    utils.between(format.mimeType, 'codecs=\"', '\"') : null;\n  format.videoCodec = format.hasVideo && format.codecs ?\n    format.codecs.split(', ')[0] : null;\n  format.audioCodec = format.hasAudio && format.codecs ?\n    format.codecs.split(', ').slice(-1)[0] : null;\n  format.isLive = /\\bsource[/=]yt_live_broadcast\\b/.test(format.url);\n  format.isHLS = /\\/manifest\\/hls_(variant|playlist)\\//.test(format.url);\n  format.isDashMPD = /\\/manifest\\/dash\\//.test(format.url);\n  return format;\n};\n", "/**\n * Get video ID.\n *\n * There are a few type of video URL formats.\n *  - https://www.youtube.com/watch?v=VIDEO_ID\n *  - https://m.youtube.com/watch?v=VIDEO_ID\n *  - https://youtu.be/VIDEO_ID\n *  - https://www.youtube.com/v/VIDEO_ID\n *  - https://www.youtube.com/embed/VIDEO_ID\n *  - https://music.youtube.com/watch?v=VIDEO_ID\n *  - https://gaming.youtube.com/watch?v=VIDEO_ID\n *\n * @param {string} link\n * @return {string}\n * @throws {Error} If unable to find a id\n * @throws {TypeError} If videoid doesn't match specs\n */\nconst validQueryDomains = new Set([\n  'youtube.com',\n  'www.youtube.com',\n  'm.youtube.com',\n  'music.youtube.com',\n  'gaming.youtube.com',\n]);\nconst validPathDomains = /^https?:\\/\\/(youtu\\.be\\/|(www\\.)?youtube\\.com\\/(embed|v|shorts)\\/)/;\nexports.getURLVideoID = link => {\n  const parsed = new URL(link.trim());\n  let id = parsed.searchParams.get('v');\n  if (validPathDomains.test(link.trim()) && !id) {\n    const paths = parsed.pathname.split('/');\n    id = parsed.host === 'youtu.be' ? paths[1] : paths[2];\n  } else if (parsed.hostname && !validQueryDomains.has(parsed.hostname)) {\n    throw Error('Not a YouTube domain');\n  }\n  if (!id) {\n    throw Error(`No video id found: \"${link}\"`);\n  }\n  id = id.substring(0, 11);\n  if (!exports.validateID(id)) {\n    throw TypeError(`Video id (${id}) does not match expected ` +\n      `format (${idRegex.toString()})`);\n  }\n  return id;\n};\n\n\n/**\n * Gets video ID either from a url or by checking if the given string\n * matches the video ID format.\n *\n * @param {string} str\n * @returns {string}\n * @throws {Error} If unable to find a id\n * @throws {TypeError} If videoid doesn't match specs\n */\nconst urlRegex = /^https?:\\/\\//;\nexports.getVideoID = str => {\n  if (exports.validateID(str)) {\n    return str;\n  } else if (urlRegex.test(str.trim())) {\n    return exports.getURLVideoID(str);\n  } else {\n    throw Error(`No video id found: ${str}`);\n  }\n};\n\n\n/**\n * Returns true if given id satifies YouTube's id format.\n *\n * @param {string} id\n * @return {boolean}\n */\nconst idRegex = /^[a-zA-Z0-9-_]{11}$/;\nexports.validateID = id => idRegex.test(id.trim());\n\n\n/**\n * Checks wether the input string includes a valid id.\n *\n * @param {string} string\n * @returns {boolean}\n */\nexports.validateURL = string => {\n  try {\n    exports.getURLVideoID(string);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n", null, null, null, null, null, "const utils = require('./utils');\nconst qs = require('querystring');\nconst { parseTimestamp } = require('m3u8stream');\n\n\nconst BASE_URL = 'https://www.youtube.com/watch?v=';\nconst TITLE_TO_CATEGORY = {\n  song: { name: 'Music', url: 'https://music.youtube.com/' },\n};\n\nconst getText = obj => obj ? obj.runs ? obj.runs[0].text : obj.simpleText : null;\n\n\n/**\n * Get video media.\n *\n * @param {Object} info\n * @returns {Object}\n */\nexports.getMedia = info => {\n  let media = {};\n  let results = [];\n  try {\n    results = info.response.contents.twoColumnWatchNextResults.results.results.contents;\n  } catch (err) {\n    // Do nothing\n  }\n\n  let result = results.find(v => v.videoSecondaryInfoRenderer);\n  if (!result) { return {}; }\n\n  try {\n    let metadataRows =\n      (result.metadataRowContainer || result.videoSecondaryInfoRenderer.metadataRowContainer)\n        .metadataRowContainerRenderer.rows;\n    for (let row of metadataRows) {\n      if (row.metadataRowRenderer) {\n        let title = getText(row.metadataRowRenderer.title).toLowerCase();\n        let contents = row.metadataRowRenderer.contents[0];\n        media[title] = getText(contents);\n        let runs = contents.runs;\n        if (runs && runs[0].navigationEndpoint) {\n          media[`${title}_url`] = new URL(\n            runs[0].navigationEndpoint.commandMetadata.webCommandMetadata.url, BASE_URL).toString();\n        }\n        if (title in TITLE_TO_CATEGORY) {\n          media.category = TITLE_TO_CATEGORY[title].name;\n          media.category_url = TITLE_TO_CATEGORY[title].url;\n        }\n      } else if (row.richMetadataRowRenderer) {\n        let contents = row.richMetadataRowRenderer.contents;\n        let boxArt = contents\n          .filter(meta => meta.richMetadataRenderer.style === 'RICH_METADATA_RENDERER_STYLE_BOX_ART');\n        for (let { richMetadataRenderer } of boxArt) {\n          let meta = richMetadataRenderer;\n          media.year = getText(meta.subtitle);\n          let type = getText(meta.callToAction).split(' ')[1];\n          media[type] = getText(meta.title);\n          media[`${type}_url`] = new URL(\n            meta.endpoint.commandMetadata.webCommandMetadata.url, BASE_URL).toString();\n          media.thumbnails = meta.thumbnail.thumbnails;\n        }\n        let topic = contents\n          .filter(meta => meta.richMetadataRenderer.style === 'RICH_METADATA_RENDERER_STYLE_TOPIC');\n        for (let { richMetadataRenderer } of topic) {\n          let meta = richMetadataRenderer;\n          media.category = getText(meta.title);\n          media.category_url = new URL(\n            meta.endpoint.commandMetadata.webCommandMetadata.url, BASE_URL).toString();\n        }\n      }\n    }\n  } catch (err) {\n    // Do nothing.\n  }\n\n  return media;\n};\n\n\nconst isVerified = badges => !!(badges && badges.find(b => b.metadataBadgeRenderer.tooltip === 'Verified'));\n\n\n/**\n * Get video author.\n *\n * @param {Object} info\n * @returns {Object}\n */\nexports.getAuthor = info => {\n  let channelId, thumbnails = [], subscriberCount, verified = false;\n  try {\n    let results = info.response.contents.twoColumnWatchNextResults.results.results.contents;\n    let v = results.find(v2 =>\n      v2.videoSecondaryInfoRenderer &&\n      v2.videoSecondaryInfoRenderer.owner &&\n      v2.videoSecondaryInfoRenderer.owner.videoOwnerRenderer);\n    let videoOwnerRenderer = v.videoSecondaryInfoRenderer.owner.videoOwnerRenderer;\n    channelId = videoOwnerRenderer.navigationEndpoint.browseEndpoint.browseId;\n    thumbnails = videoOwnerRenderer.thumbnail.thumbnails.map(thumbnail => {\n      thumbnail.url = new URL(thumbnail.url, BASE_URL).toString();\n      return thumbnail;\n    });\n    subscriberCount = utils.parseAbbreviatedNumber(getText(videoOwnerRenderer.subscriberCountText));\n    verified = isVerified(videoOwnerRenderer.badges);\n  } catch (err) {\n    // Do nothing.\n  }\n  try {\n    let videoDetails = info.player_response.microformat && info.player_response.microformat.playerMicroformatRenderer;\n    let id = (videoDetails && videoDetails.channelId) || channelId || info.player_response.videoDetails.channelId;\n    let author = {\n      id: id,\n      name: videoDetails ? videoDetails.ownerChannelName : info.player_response.videoDetails.author,\n      user: videoDetails ? videoDetails.ownerProfileUrl.split('/').slice(-1)[0] : null,\n      channel_url: `https://www.youtube.com/channel/${id}`,\n      external_channel_url: videoDetails ? `https://www.youtube.com/channel/${videoDetails.externalChannelId}` : '',\n      user_url: videoDetails ? new URL(videoDetails.ownerProfileUrl, BASE_URL).toString() : '',\n      thumbnails,\n      verified,\n      subscriber_count: subscriberCount,\n    };\n    if (thumbnails.length) {\n      utils.deprecate(author, 'avatar', author.thumbnails[0].url, 'author.avatar', 'author.thumbnails[0].url');\n    }\n    return author;\n  } catch (err) {\n    return {};\n  }\n};\n\nconst parseRelatedVideo = (details, rvsParams) => {\n  if (!details) return;\n  try {\n    let viewCount = getText(details.viewCountText);\n    let shortViewCount = getText(details.shortViewCountText);\n    let rvsDetails = rvsParams.find(elem => elem.id === details.videoId);\n    if (!/^\\d/.test(shortViewCount)) {\n      shortViewCount = (rvsDetails && rvsDetails.short_view_count_text) || '';\n    }\n    viewCount = (/^\\d/.test(viewCount) ? viewCount : shortViewCount).split(' ')[0];\n    let browseEndpoint = details.shortBylineText.runs[0].navigationEndpoint.browseEndpoint;\n    let channelId = browseEndpoint.browseId;\n    let name = getText(details.shortBylineText);\n    let user = (browseEndpoint.canonicalBaseUrl || '').split('/').slice(-1)[0];\n    let video = {\n      id: details.videoId,\n      title: getText(details.title),\n      published: getText(details.publishedTimeText),\n      author: {\n        id: channelId,\n        name,\n        user,\n        channel_url: `https://www.youtube.com/channel/${channelId}`,\n        user_url: `https://www.youtube.com/user/${user}`,\n        thumbnails: details.channelThumbnail.thumbnails.map(thumbnail => {\n          thumbnail.url = new URL(thumbnail.url, BASE_URL).toString();\n          return thumbnail;\n        }),\n        verified: isVerified(details.ownerBadges),\n\n        [Symbol.toPrimitive]() {\n          console.warn(`\\`relatedVideo.author\\` will be removed in a near future release, ` +\n            `use \\`relatedVideo.author.name\\` instead.`);\n          return video.author.name;\n        },\n\n      },\n      short_view_count_text: shortViewCount.split(' ')[0],\n      view_count: viewCount.replace(/,/g, ''),\n      length_seconds: details.lengthText ?\n        Math.floor(parseTimestamp(getText(details.lengthText)) / 1000) :\n        rvsParams && `${rvsParams.length_seconds}`,\n      thumbnails: details.thumbnail.thumbnails,\n      richThumbnails:\n        details.richThumbnail ?\n          details.richThumbnail.movingThumbnailRenderer.movingThumbnailDetails.thumbnails : [],\n      isLive: !!(details.badges && details.badges.find(b => b.metadataBadgeRenderer.label === 'LIVE NOW')),\n    };\n\n    utils.deprecate(video, 'author_thumbnail', video.author.thumbnails[0].url,\n      'relatedVideo.author_thumbnail', 'relatedVideo.author.thumbnails[0].url');\n    utils.deprecate(video, 'ucid', video.author.id, 'relatedVideo.ucid', 'relatedVideo.author.id');\n    utils.deprecate(video, 'video_thumbnail', video.thumbnails[0].url,\n      'relatedVideo.video_thumbnail', 'relatedVideo.thumbnails[0].url');\n    return video;\n  } catch (err) {\n    // Skip.\n  }\n};\n\n/**\n * Get related videos.\n *\n * @param {Object} info\n * @returns {Array.<Object>}\n */\nexports.getRelatedVideos = info => {\n  let rvsParams = [], secondaryResults = [];\n  try {\n    rvsParams = info.response.webWatchNextResponseExtensionData.relatedVideoArgs.split(',').map(e => qs.parse(e));\n  } catch (err) {\n    // Do nothing.\n  }\n  try {\n    secondaryResults = info.response.contents.twoColumnWatchNextResults.secondaryResults.secondaryResults.results;\n  } catch (err) {\n    return [];\n  }\n  let videos = [];\n  for (let result of secondaryResults || []) {\n    let details = result.compactVideoRenderer;\n    if (details) {\n      let video = parseRelatedVideo(details, rvsParams);\n      if (video) videos.push(video);\n    } else {\n      let autoplay = result.compactAutoplayRenderer || result.itemSectionRenderer;\n      if (!autoplay || !Array.isArray(autoplay.contents)) continue;\n      for (let content of autoplay.contents) {\n        let video = parseRelatedVideo(content.compactVideoRenderer, rvsParams);\n        if (video) videos.push(video);\n      }\n    }\n  }\n  return videos;\n};\n\n/**\n * Get like count.\n *\n * @param {Object} info\n * @returns {number}\n */\nexports.getLikes = info => {\n  try {\n    let contents = info.response.contents.twoColumnWatchNextResults.results.results.contents;\n    let video = contents.find(r => r.videoPrimaryInfoRenderer);\n    let buttons = video.videoPrimaryInfoRenderer.videoActions.menuRenderer.topLevelButtons;\n    let like = buttons.find(b => b.toggleButtonRenderer &&\n      b.toggleButtonRenderer.defaultIcon.iconType === 'LIKE');\n    return parseInt(like.toggleButtonRenderer.defaultText.accessibility.accessibilityData.label.replace(/\\D+/g, ''));\n  } catch (err) {\n    return null;\n  }\n};\n\n/**\n * Get dislike count.\n *\n * @param {Object} info\n * @returns {number}\n */\nexports.getDislikes = info => {\n  try {\n    let contents = info.response.contents.twoColumnWatchNextResults.results.results.contents;\n    let video = contents.find(r => r.videoPrimaryInfoRenderer);\n    let buttons = video.videoPrimaryInfoRenderer.videoActions.menuRenderer.topLevelButtons;\n    let dislike = buttons.find(b => b.toggleButtonRenderer &&\n      b.toggleButtonRenderer.defaultIcon.iconType === 'DISLIKE');\n    return parseInt(dislike.toggleButtonRenderer.defaultText.accessibility.accessibilityData.label.replace(/\\D+/g, ''));\n  } catch (err) {\n    return null;\n  }\n};\n\n/**\n * Cleans up a few fields on `videoDetails`.\n *\n * @param {Object} videoDetails\n * @param {Object} info\n * @returns {Object}\n */\nexports.cleanVideoDetails = (videoDetails, info) => {\n  videoDetails.thumbnails = videoDetails.thumbnail.thumbnails;\n  delete videoDetails.thumbnail;\n  utils.deprecate(videoDetails, 'thumbnail', { thumbnails: videoDetails.thumbnails },\n    'videoDetails.thumbnail.thumbnails', 'videoDetails.thumbnails');\n  videoDetails.description = videoDetails.shortDescription || getText(videoDetails.description);\n  delete videoDetails.shortDescription;\n  utils.deprecate(videoDetails, 'shortDescription', videoDetails.description,\n    'videoDetails.shortDescription', 'videoDetails.description');\n\n  // Use more reliable `lengthSeconds` from `playerMicroformatRenderer`.\n  videoDetails.lengthSeconds =\n    (info.player_response.microformat &&\n    info.player_response.microformat.playerMicroformatRenderer.lengthSeconds) ||\n    info.player_response.videoDetails.lengthSeconds;\n  return videoDetails;\n};\n\n/**\n * Get storyboards info.\n *\n * @param {Object} info\n * @returns {Array.<Object>}\n */\nexports.getStoryboards = info => {\n  const parts = info.player_response.storyboards &&\n    info.player_response.storyboards.playerStoryboardSpecRenderer &&\n    info.player_response.storyboards.playerStoryboardSpecRenderer.spec &&\n    info.player_response.storyboards.playerStoryboardSpecRenderer.spec.split('|');\n\n  if (!parts) return [];\n\n  const url = new URL(parts.shift());\n\n  return parts.map((part, i) => {\n    let [\n      thumbnailWidth,\n      thumbnailHeight,\n      thumbnailCount,\n      columns,\n      rows,\n      interval,\n      nameReplacement,\n      sigh,\n    ] = part.split('#');\n\n    url.searchParams.set('sigh', sigh);\n\n    thumbnailCount = parseInt(thumbnailCount, 10);\n    columns = parseInt(columns, 10);\n    rows = parseInt(rows, 10);\n\n    const storyboardCount = Math.ceil(thumbnailCount / (columns * rows));\n\n    return {\n      templateUrl: url.toString().replace('$L', i).replace('$N', nameReplacement),\n      thumbnailWidth: parseInt(thumbnailWidth, 10),\n      thumbnailHeight: parseInt(thumbnailHeight, 10),\n      thumbnailCount,\n      interval: parseInt(interval, 10),\n      columns,\n      rows,\n      storyboardCount,\n    };\n  });\n};\n\n/**\n * Get chapters info.\n *\n * @param {Object} info\n * @returns {Array.<Object>}\n */\nexports.getChapters = info => {\n  const playerOverlayRenderer = info.response &&\n    info.response.playerOverlays &&\n    info.response.playerOverlays.playerOverlayRenderer;\n  const playerBar = playerOverlayRenderer &&\n    playerOverlayRenderer.decoratedPlayerBarRenderer &&\n    playerOverlayRenderer.decoratedPlayerBarRenderer.decoratedPlayerBarRenderer &&\n    playerOverlayRenderer.decoratedPlayerBarRenderer.decoratedPlayerBarRenderer.playerBar;\n  const markersMap = playerBar &&\n    playerBar.multiMarkersPlayerBarRenderer &&\n    playerBar.multiMarkersPlayerBarRenderer.markersMap;\n  const marker = Array.isArray(markersMap) && markersMap.find(m => m.value && Array.isArray(m.value.chapters));\n  if (!marker) return [];\n  const chapters = marker.value.chapters;\n\n  return chapters.map(chapter => ({\n    title: getText(chapter.chapterRenderer.title),\n    start_time: chapter.chapterRenderer.timeRangeStartMillis / 1000,\n  }));\n};\n", "const { setTimeout } = require('timers');\n\n// A cache that expires.\nmodule.exports = class Cache extends Map {\n  constructor(timeout = 1000) {\n    super();\n    this.timeout = timeout;\n  }\n  set(key, value) {\n    if (this.has(key)) {\n      clearTimeout(super.get(key).tid);\n    }\n    super.set(key, {\n      tid: setTimeout(this.delete.bind(this, key), this.timeout).unref(),\n      value,\n    });\n  }\n  get(key) {\n    let entry = super.get(key);\n    if (entry) {\n      return entry.value;\n    }\n    return null;\n  }\n  getOrSet(key, fn) {\n    if (this.has(key)) {\n      return this.get(key);\n    } else {\n      let value = fn();\n      this.set(key, value);\n      (async() => {\n        try {\n          await value;\n        } catch (err) {\n          this.delete(key);\n        }\n      })();\n      return value;\n    }\n  }\n  delete(key) {\n    let entry = super.get(key);\n    if (entry) {\n      clearTimeout(entry.tid);\n      super.delete(key);\n    }\n  }\n  clear() {\n    for (let entry of this.values()) {\n      clearTimeout(entry.tid);\n    }\n    super.clear();\n  }\n};\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"vm\" has been externalized for browser compatibility. Cannot access \"vm.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "const querystring = require('querystring');\nconst Cache = require('./cache');\nconst utils = require('./utils');\nconst vm = require('vm');\n\n// A shared cache to keep track of html5player js functions.\nexports.cache = new Cache();\n\n/**\n * Extract signature deciphering and n parameter transform functions from html5player file.\n *\n * @param {string} html5playerfile\n * @param {Object} options\n * @returns {Promise<Array.<string>>}\n */\nexports.getFunctions = (html5playerfile, options) => exports.cache.getOrSet(html5playerfile, async() => {\n  const body = await utils.exposedMiniget(html5playerfile, options).text();\n  const functions = exports.extractFunctions(body);\n  if (!functions || !functions.length) {\n    throw Error('Could not extract functions');\n  }\n  exports.cache.set(html5playerfile, functions);\n  return functions;\n});\n\n/**\n * Extracts the actions that should be taken to decipher a signature\n * and tranform the n parameter\n *\n * @param {string} body\n * @returns {Array.<string>}\n */\nexports.extractFunctions = body => {\n  const functions = [];\n  const extractManipulations = caller => {\n    const functionName = utils.between(caller, `a=a.split(\"\");`, `.`);\n    if (!functionName) return '';\n    const functionStart = `var ${functionName}={`;\n    const ndx = body.indexOf(functionStart);\n    if (ndx < 0) return '';\n    const subBody = body.slice(ndx + functionStart.length - 1);\n    return `var ${functionName}=${utils.cutAfterJS(subBody)}`;\n  };\n  const extractDecipher = () => {\n    const functionName = utils.between(body, `a.set(\"alr\",\"yes\");c&&(c=`, `(decodeURIC`);\n    if (functionName && functionName.length) {\n      const functionStart = `${functionName}=function(a)`;\n      const ndx = body.indexOf(functionStart);\n      if (ndx >= 0) {\n        const subBody = body.slice(ndx + functionStart.length);\n        let functionBody = `var ${functionStart}${utils.cutAfterJS(subBody)}`;\n        functionBody = `${extractManipulations(functionBody)};${functionBody};${functionName}(sig);`;\n        functions.push(functionBody);\n      }\n    }\n  };\n  const extractNCode = () => {\n    let functionName = utils.between(body, `&&(b=a.get(\"n\"))&&(b=`, `(b)`);\n    if (functionName.includes('[')) functionName = utils.between(body, `var ${functionName.split('[')[0]}=[`, `]`);\n    if (functionName && functionName.length) {\n      const functionStart = `${functionName}=function(a)`;\n      const ndx = body.indexOf(functionStart);\n      if (ndx >= 0) {\n        const subBody = body.slice(ndx + functionStart.length);\n        const functionBody = `var ${functionStart}${utils.cutAfterJS(subBody)};${functionName}(ncode);`;\n        functions.push(functionBody);\n      }\n    }\n  };\n  extractDecipher();\n  extractNCode();\n  return functions;\n};\n\n/**\n * Apply decipher and n-transform to individual format\n *\n * @param {Object} format\n * @param {vm.Script} decipherScript\n * @param {vm.Script} nTransformScript\n */\nexports.setDownloadURL = (format, decipherScript, nTransformScript) => {\n  const decipher = url => {\n    const args = querystring.parse(url);\n    if (!args.s || !decipherScript) return args.url;\n    const components = new URL(decodeURIComponent(args.url));\n    components.searchParams.set(args.sp ? args.sp : 'signature',\n      decipherScript.runInNewContext({ sig: decodeURIComponent(args.s) }));\n    return components.toString();\n  };\n  const ncode = url => {\n    const components = new URL(decodeURIComponent(url));\n    const n = components.searchParams.get('n');\n    if (!n || !nTransformScript) return url;\n    components.searchParams.set('n', nTransformScript.runInNewContext({ ncode: n }));\n    return components.toString();\n  };\n  const cipher = !format.url;\n  const url = format.url || format.signatureCipher || format.cipher;\n  format.url = cipher ? ncode(decipher(url)) : ncode(url);\n  delete format.signatureCipher;\n  delete format.cipher;\n};\n\n/**\n * Applies decipher and n parameter transforms to all format URL's.\n *\n * @param {Array.<Object>} formats\n * @param {string} html5player\n * @param {Object} options\n */\nexports.decipherFormats = async(formats, html5player, options) => {\n  let decipheredFormats = {};\n  let functions = await exports.getFunctions(html5player, options);\n  const decipherScript = functions.length ? new vm.Script(functions[0]) : null;\n  const nTransformScript = functions.length > 1 ? new vm.Script(functions[1]) : null;\n  formats.forEach(format => {\n    exports.setDownloadURL(format, decipherScript, nTransformScript);\n    decipheredFormats[format.url] = format;\n  });\n  return decipheredFormats;\n};\n", "const querystring = require('querystring');\nconst sax = require('sax');\nconst miniget = require('miniget');\nconst utils = require('./utils');\n// Forces Node JS version of setTimeout for Electron based applications\nconst { setTimeout } = require('timers');\nconst formatUtils = require('./format-utils');\nconst urlUtils = require('./url-utils');\nconst extras = require('./info-extras');\nconst sig = require('./sig');\nconst Cache = require('./cache');\n\n\nconst BASE_URL = 'https://www.youtube.com/watch?v=';\n\n\n// Cached for storing basic/full info.\nexports.cache = new Cache();\nexports.cookieCache = new Cache(1000 * 60 * 60 * 24);\nexports.watchPageCache = new Cache();\n// Cache for cver used in getVideoInfoPage\nlet cver = '2.20210622.10.00';\n\n\n// Special error class used to determine if an error is unrecoverable,\n// as in, ytdl-core should not try again to fetch the video metadata.\n// In this case, the video is usually unavailable in some way.\nclass UnrecoverableError extends Error {}\n\n\n// List of URLs that show up in `notice_url` for age restricted videos.\nconst AGE_RESTRICTED_URLS = [\n  'support.google.com/youtube/?p=age_restrictions',\n  'youtube.com/t/community_guidelines',\n];\n\n\n/**\n * Gets info from a video without getting additional formats.\n *\n * @param {string} id\n * @param {Object} options\n * @returns {Promise<Object>}\n*/\nexports.getBasicInfo = async(id, options) => {\n  if (options.IPv6Block) {\n    options.requestOptions = Object.assign({}, options.requestOptions, {\n      family: 6,\n      localAddress: utils.getRandomIPv6(options.IPv6Block),\n    });\n  }\n  const retryOptions = Object.assign({}, miniget.defaultOptions, options.requestOptions);\n  options.requestOptions = Object.assign({}, options.requestOptions, {});\n  options.requestOptions.headers = Object.assign({},\n    {\n      // eslint-disable-next-line max-len\n      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.101 Safari/537.36',\n    }, options.requestOptions.headers);\n  const validate = info => {\n    let playErr = utils.playError(info.player_response, ['ERROR'], UnrecoverableError);\n    let privateErr = privateVideoError(info.player_response);\n    if (playErr || privateErr) {\n      throw playErr || privateErr;\n    }\n    return info && info.player_response && (\n      info.player_response.streamingData || isRental(info.player_response) || isNotYetBroadcasted(info.player_response)\n    );\n  };\n  let info = await pipeline([id, options], validate, retryOptions, [\n    getWatchHTMLPage,\n    getWatchJSONPage,\n    getVideoInfoPage,\n  ]);\n\n  Object.assign(info, {\n    formats: parseFormats(info.player_response),\n    related_videos: extras.getRelatedVideos(info),\n  });\n\n  // Add additional properties to info.\n  const media = extras.getMedia(info);\n  const additional = {\n    author: extras.getAuthor(info),\n    media,\n    likes: extras.getLikes(info),\n    dislikes: extras.getDislikes(info),\n    age_restricted: !!(media && AGE_RESTRICTED_URLS.some(url =>\n      Object.values(media).some(v => typeof v === 'string' && v.includes(url)))\n    ),\n\n    // Give the standard link to the video.\n    video_url: BASE_URL + id,\n    storyboards: extras.getStoryboards(info),\n    chapters: extras.getChapters(info),\n  };\n\n  info.videoDetails = extras.cleanVideoDetails(Object.assign({},\n    info.player_response && info.player_response.microformat &&\n    info.player_response.microformat.playerMicroformatRenderer,\n    info.player_response && info.player_response.videoDetails, additional), info);\n\n  return info;\n};\n\nconst privateVideoError = player_response => {\n  let playability = player_response && player_response.playabilityStatus;\n  if (playability && playability.status === 'LOGIN_REQUIRED' && playability.messages &&\n    playability.messages.filter(m => /This is a private video/.test(m)).length) {\n    return new UnrecoverableError(playability.reason || (playability.messages && playability.messages[0]));\n  } else {\n    return null;\n  }\n};\n\n\nconst isRental = player_response => {\n  let playability = player_response.playabilityStatus;\n  return playability && playability.status === 'UNPLAYABLE' &&\n    playability.errorScreen && playability.errorScreen.playerLegacyDesktopYpcOfferRenderer;\n};\n\n\nconst isNotYetBroadcasted = player_response => {\n  let playability = player_response.playabilityStatus;\n  return playability && playability.status === 'LIVE_STREAM_OFFLINE';\n};\n\n\nconst getWatchHTMLURL = (id, options) => `${BASE_URL + id}&hl=${options.lang || 'en'}`;\nconst getWatchHTMLPageBody = (id, options) => {\n  const url = getWatchHTMLURL(id, options);\n  return exports.watchPageCache.getOrSet(url, () => utils.exposedMiniget(url, options).text());\n};\n\n\nconst EMBED_URL = 'https://www.youtube.com/embed/';\nconst getEmbedPageBody = (id, options) => {\n  const embedUrl = `${EMBED_URL + id}?hl=${options.lang || 'en'}`;\n  return utils.exposedMiniget(embedUrl, options).text();\n};\n\n\nconst getHTML5player = body => {\n  let html5playerRes =\n    /<script\\s+src=\"([^\"]+)\"(?:\\s+type=\"text\\/javascript\")?\\s+name=\"player_ias\\/base\"\\s*>|\"jsUrl\":\"([^\"]+)\"/\n      .exec(body);\n  return html5playerRes ? html5playerRes[1] || html5playerRes[2] : null;\n};\n\n\nconst getIdentityToken = (id, options, key, throwIfNotFound) =>\n  exports.cookieCache.getOrSet(key, async() => {\n    let page = await getWatchHTMLPageBody(id, options);\n    let match = page.match(/([\"'])ID_TOKEN\\1[:,]\\s?\"([^\"]+)\"/);\n    if (!match && throwIfNotFound) {\n      throw new UnrecoverableError('Cookie header used in request, but unable to find YouTube identity token');\n    }\n    return match && match[2];\n  });\n\n\n/**\n * Goes through each endpoint in the pipeline, retrying on failure if the error is recoverable.\n * If unable to succeed with one endpoint, moves onto the next one.\n *\n * @param {Array.<Object>} args\n * @param {Function} validate\n * @param {Object} retryOptions\n * @param {Array.<Function>} endpoints\n * @returns {[Object, Object, Object]}\n */\nconst pipeline = async(args, validate, retryOptions, endpoints) => {\n  let info;\n  for (let func of endpoints) {\n    try {\n      const newInfo = await retryFunc(func, args.concat([info]), retryOptions);\n      if (newInfo.player_response) {\n        newInfo.player_response.videoDetails = assign(\n          info && info.player_response && info.player_response.videoDetails,\n          newInfo.player_response.videoDetails);\n        newInfo.player_response = assign(info && info.player_response, newInfo.player_response);\n      }\n      info = assign(info, newInfo);\n      if (validate(info, false)) {\n        break;\n      }\n    } catch (err) {\n      if (err instanceof UnrecoverableError || func === endpoints[endpoints.length - 1]) {\n        throw err;\n      }\n      // Unable to find video metadata... so try next endpoint.\n    }\n  }\n  return info;\n};\n\n\n/**\n * Like Object.assign(), but ignores `null` and `undefined` from `source`.\n *\n * @param {Object} target\n * @param {Object} source\n * @returns {Object}\n */\nconst assign = (target, source) => {\n  if (!target || !source) { return target || source; }\n  for (let [key, value] of Object.entries(source)) {\n    if (value !== null && value !== undefined) {\n      target[key] = value;\n    }\n  }\n  return target;\n};\n\n\n/**\n * Given a function, calls it with `args` until it's successful,\n * or until it encounters an unrecoverable error.\n * Currently, any error from miniget is considered unrecoverable. Errors such as\n * too many redirects, invalid URL, status code 404, status code 502.\n *\n * @param {Function} func\n * @param {Array.<Object>} args\n * @param {Object} options\n * @param {number} options.maxRetries\n * @param {Object} options.backoff\n * @param {number} options.backoff.inc\n */\nconst retryFunc = async(func, args, options) => {\n  let currentTry = 0, result;\n  while (currentTry <= options.maxRetries) {\n    try {\n      result = await func(...args);\n      break;\n    } catch (err) {\n      if (err instanceof UnrecoverableError ||\n        (err instanceof miniget.MinigetError && err.statusCode < 500) || currentTry >= options.maxRetries) {\n        throw err;\n      }\n      let wait = Math.min(++currentTry * options.backoff.inc, options.backoff.max);\n      await new Promise(resolve => setTimeout(resolve, wait));\n    }\n  }\n  return result;\n};\n\n\nconst jsonClosingChars = /^[)\\]}'\\s]+/;\nconst parseJSON = (source, varName, json) => {\n  if (!json || typeof json === 'object') {\n    return json;\n  } else {\n    try {\n      json = json.replace(jsonClosingChars, '');\n      return JSON.parse(json);\n    } catch (err) {\n      throw Error(`Error parsing ${varName} in ${source}: ${err.message}`);\n    }\n  }\n};\n\n\nconst findJSON = (source, varName, body, left, right, prependJSON) => {\n  let jsonStr = utils.between(body, left, right);\n  if (!jsonStr) {\n    throw Error(`Could not find ${varName} in ${source}`);\n  }\n  return parseJSON(source, varName, utils.cutAfterJS(`${prependJSON}${jsonStr}`));\n};\n\n\nconst findPlayerResponse = (source, info) => {\n  const player_response = info && (\n    (info.args && info.args.player_response) ||\n    info.player_response || info.playerResponse || info.embedded_player_response);\n  return parseJSON(source, 'player_response', player_response);\n};\n\n\nconst getWatchJSONURL = (id, options) => `${getWatchHTMLURL(id, options)}&pbj=1`;\nconst getWatchJSONPage = async(id, options) => {\n  const reqOptions = Object.assign({ headers: {} }, options.requestOptions);\n  let cookie = reqOptions.headers.Cookie || reqOptions.headers.cookie;\n  reqOptions.headers = Object.assign({\n    'x-youtube-client-name': '1',\n    'x-youtube-client-version': cver,\n    'x-youtube-identity-token': exports.cookieCache.get(cookie || 'browser') || '',\n  }, reqOptions.headers);\n\n  const setIdentityToken = async(key, throwIfNotFound) => {\n    if (reqOptions.headers['x-youtube-identity-token']) { return; }\n    reqOptions.headers['x-youtube-identity-token'] = await getIdentityToken(id, options, key, throwIfNotFound);\n  };\n\n  if (cookie) {\n    await setIdentityToken(cookie, true);\n  }\n\n  const jsonUrl = getWatchJSONURL(id, options);\n  const body = await utils.exposedMiniget(jsonUrl, options, reqOptions).text();\n  let parsedBody = parseJSON('watch.json', 'body', body);\n  if (parsedBody.reload === 'now') {\n    await setIdentityToken('browser', false);\n  }\n  if (parsedBody.reload === 'now' || !Array.isArray(parsedBody)) {\n    throw Error('Unable to retrieve video metadata in watch.json');\n  }\n  let info = parsedBody.reduce((part, curr) => Object.assign(curr, part), {});\n  info.player_response = findPlayerResponse('watch.json', info);\n  info.html5player = info.player && info.player.assets && info.player.assets.js;\n\n  return info;\n};\n\n\nconst getWatchHTMLPage = async(id, options) => {\n  let body = await getWatchHTMLPageBody(id, options);\n  let info = { page: 'watch' };\n  try {\n    cver = utils.between(body, '{\"key\":\"cver\",\"value\":\"', '\"}');\n    info.player_response = findJSON('watch.html', 'player_response',\n      body, /\\bytInitialPlayerResponse\\s*=\\s*\\{/i, '</script>', '{');\n  } catch (err) {\n    let args = findJSON('watch.html', 'player_response', body, /\\bytplayer\\.config\\s*=\\s*{/, '</script>', '{');\n    info.player_response = findPlayerResponse('watch.html', args);\n  }\n  info.response = findJSON('watch.html', 'response', body, /\\bytInitialData(\"\\])?\\s*=\\s*\\{/i, '</script>', '{');\n  info.html5player = getHTML5player(body);\n  return info;\n};\n\n\nconst INFO_HOST = 'www.youtube.com';\nconst INFO_PATH = '/get_video_info';\nconst VIDEO_EURL = 'https://youtube.googleapis.com/v/';\nconst getVideoInfoPage = async(id, options) => {\n  const url = new URL(`https://${INFO_HOST}${INFO_PATH}`);\n  url.searchParams.set('video_id', id);\n  url.searchParams.set('c', 'TVHTML5');\n  url.searchParams.set('cver', `7${cver.substr(1)}`);\n  url.searchParams.set('eurl', VIDEO_EURL + id);\n  url.searchParams.set('ps', 'default');\n  url.searchParams.set('gl', 'US');\n  url.searchParams.set('hl', options.lang || 'en');\n  url.searchParams.set('html5', '1');\n  const body = await utils.exposedMiniget(url.toString(), options).text();\n  let info = querystring.parse(body);\n  info.player_response = findPlayerResponse('get_video_info', info);\n  return info;\n};\n\n\n/**\n * @param {Object} player_response\n * @returns {Array.<Object>}\n */\nconst parseFormats = player_response => {\n  let formats = [];\n  if (player_response && player_response.streamingData) {\n    formats = formats\n      .concat(player_response.streamingData.formats || [])\n      .concat(player_response.streamingData.adaptiveFormats || []);\n  }\n  return formats;\n};\n\n\n/**\n * Gets info from a video additional formats and deciphered URLs.\n *\n * @param {string} id\n * @param {Object} options\n * @returns {Promise<Object>}\n */\nexports.getInfo = async(id, options) => {\n  let info = await exports.getBasicInfo(id, options);\n  const hasManifest =\n    info.player_response && info.player_response.streamingData && (\n      info.player_response.streamingData.dashManifestUrl ||\n      info.player_response.streamingData.hlsManifestUrl\n    );\n  let funcs = [];\n  if (info.formats.length) {\n    info.html5player = info.html5player ||\n      getHTML5player(await getWatchHTMLPageBody(id, options)) || getHTML5player(await getEmbedPageBody(id, options));\n    if (!info.html5player) {\n      throw Error('Unable to find html5player file');\n    }\n    const html5player = new URL(info.html5player, BASE_URL).toString();\n    funcs.push(sig.decipherFormats(info.formats, html5player, options));\n  }\n  if (hasManifest && info.player_response.streamingData.dashManifestUrl) {\n    let url = info.player_response.streamingData.dashManifestUrl;\n    funcs.push(getDashManifest(url, options));\n  }\n  if (hasManifest && info.player_response.streamingData.hlsManifestUrl) {\n    let url = info.player_response.streamingData.hlsManifestUrl;\n    funcs.push(getM3U8(url, options));\n  }\n\n  let results = await Promise.all(funcs);\n  info.formats = Object.values(Object.assign({}, ...results));\n  info.formats = info.formats.map(formatUtils.addFormatMeta);\n  info.formats.sort(formatUtils.sortFormats);\n  info.full = true;\n  return info;\n};\n\n\n/**\n * Gets additional DASH formats.\n *\n * @param {string} url\n * @param {Object} options\n * @returns {Promise<Array.<Object>>}\n */\nconst getDashManifest = (url, options) => new Promise((resolve, reject) => {\n  let formats = {};\n  const parser = sax.parser(false);\n  parser.onerror = reject;\n  let adaptationSet;\n  parser.onopentag = node => {\n    if (node.name === 'ADAPTATIONSET') {\n      adaptationSet = node.attributes;\n    } else if (node.name === 'REPRESENTATION') {\n      const itag = parseInt(node.attributes.ID);\n      if (!isNaN(itag)) {\n        formats[url] = Object.assign({\n          itag, url,\n          bitrate: parseInt(node.attributes.BANDWIDTH),\n          mimeType: `${adaptationSet.MIMETYPE}; codecs=\"${node.attributes.CODECS}\"`,\n        }, node.attributes.HEIGHT ? {\n          width: parseInt(node.attributes.WIDTH),\n          height: parseInt(node.attributes.HEIGHT),\n          fps: parseInt(node.attributes.FRAMERATE),\n        } : {\n          audioSampleRate: node.attributes.AUDIOSAMPLINGRATE,\n        });\n      }\n    }\n  };\n  parser.onend = () => { resolve(formats); };\n  const req = utils.exposedMiniget(new URL(url, BASE_URL).toString(), options);\n  req.setEncoding('utf8');\n  req.on('error', reject);\n  req.on('data', chunk => { parser.write(chunk); });\n  req.on('end', parser.close.bind(parser));\n});\n\n\n/**\n * Gets additional formats.\n *\n * @param {string} url\n * @param {Object} options\n * @returns {Promise<Array.<Object>>}\n */\nconst getM3U8 = async(url, options) => {\n  url = new URL(url, BASE_URL);\n  const body = await utils.exposedMiniget(url.toString(), options).text();\n  let formats = {};\n  body\n    .split('\\n')\n    .filter(line => /^https?:\\/\\//.test(line))\n    .forEach(line => {\n      const itag = parseInt(line.match(/\\/itag\\/(\\d+)\\//)[1]);\n      formats[line] = { itag, url: line };\n    });\n  return formats;\n};\n\n\n// Cache get info functions.\n// In case a user wants to get a video's info before downloading.\nfor (let funcName of ['getBasicInfo', 'getInfo']) {\n  /**\n   * @param {string} link\n   * @param {Object} options\n   * @returns {Promise<Object>}\n   */\n  const func = exports[funcName];\n  exports[funcName] = async(link, options = {}) => {\n    utils.checkForUpdates();\n    let id = await urlUtils.getVideoID(link);\n    const key = [funcName, id, options.lang].join('-');\n    return exports.cache.getOrSet(key, () => func(id, options));\n  };\n}\n\n\n// Export a few helpers.\nexports.validateID = urlUtils.validateID;\nexports.validateURL = urlUtils.validateURL;\nexports.getURLVideoID = urlUtils.getURLVideoID;\nexports.getVideoID = urlUtils.getVideoID;\n", "const PassThrough = require('stream').PassThrough;\nconst getInfo = require('./info');\nconst utils = require('./utils');\nconst formatUtils = require('./format-utils');\nconst urlUtils = require('./url-utils');\nconst sig = require('./sig');\nconst miniget = require('miniget');\nconst m3u8stream = require('m3u8stream');\nconst { parseTimestamp } = require('m3u8stream');\n\n\n/**\n * @param {string} link\n * @param {!Object} options\n * @returns {ReadableStream}\n */\nconst ytdl = (link, options) => {\n  const stream = createStream(options);\n  ytdl.getInfo(link, options).then(info => {\n    downloadFromInfoCallback(stream, info, options);\n  }, stream.emit.bind(stream, 'error'));\n  return stream;\n};\nmodule.exports = ytdl;\n\nytdl.getBasicInfo = getInfo.getBasicInfo;\nytdl.getInfo = getInfo.getInfo;\nytdl.chooseFormat = formatUtils.chooseFormat;\nytdl.filterFormats = formatUtils.filterFormats;\nytdl.validateID = urlUtils.validateID;\nytdl.validateURL = urlUtils.validateURL;\nytdl.getURLVideoID = urlUtils.getURLVideoID;\nytdl.getVideoID = urlUtils.getVideoID;\nytdl.cache = {\n  sig: sig.cache,\n  info: getInfo.cache,\n  watch: getInfo.watchPageCache,\n  cookie: getInfo.cookieCache,\n};\nytdl.version = require('../package.json').version;\n\n\nconst createStream = options => {\n  const stream = new PassThrough({\n    highWaterMark: (options && options.highWaterMark) || 1024 * 512,\n  });\n  stream._destroy = () => { stream.destroyed = true; };\n  return stream;\n};\n\n\nconst pipeAndSetEvents = (req, stream, end) => {\n  // Forward events from the request to the stream.\n  [\n    'abort', 'request', 'response', 'error', 'redirect', 'retry', 'reconnect',\n  ].forEach(event => {\n    req.prependListener(event, stream.emit.bind(stream, event));\n  });\n  req.pipe(stream, { end });\n};\n\n\n/**\n * Chooses a format to download.\n *\n * @param {stream.Readable} stream\n * @param {Object} info\n * @param {Object} options\n */\nconst downloadFromInfoCallback = (stream, info, options) => {\n  options = options || {};\n\n  let err = utils.playError(info.player_response, ['UNPLAYABLE', 'LIVE_STREAM_OFFLINE', 'LOGIN_REQUIRED']);\n  if (err) {\n    stream.emit('error', err);\n    return;\n  }\n\n  if (!info.formats.length) {\n    stream.emit('error', Error('This video is unavailable'));\n    return;\n  }\n\n  let format;\n  try {\n    format = formatUtils.chooseFormat(info.formats, options);\n  } catch (e) {\n    stream.emit('error', e);\n    return;\n  }\n  stream.emit('info', info, format);\n  if (stream.destroyed) { return; }\n\n  let contentLength, downloaded = 0;\n  const ondata = chunk => {\n    downloaded += chunk.length;\n    stream.emit('progress', chunk.length, downloaded, contentLength);\n  };\n\n  if (options.IPv6Block) {\n    options.requestOptions = Object.assign({}, options.requestOptions, {\n      family: 6,\n      localAddress: utils.getRandomIPv6(options.IPv6Block),\n    });\n  }\n\n  // Download the file in chunks, in this case the default is 10MB,\n  // anything over this will cause youtube to throttle the download\n  const dlChunkSize = options.dlChunkSize || 1024 * 1024 * 10;\n  let req;\n  let shouldEnd = true;\n\n  if (format.isHLS || format.isDashMPD) {\n    req = m3u8stream(format.url, {\n      chunkReadahead: +info.live_chunk_readahead,\n      begin: options.begin || (format.isLive && Date.now()),\n      liveBuffer: options.liveBuffer,\n      requestOptions: options.requestOptions,\n      parser: format.isDashMPD ? 'dash-mpd' : 'm3u8',\n      id: format.itag,\n    });\n\n    req.on('progress', (segment, totalSegments) => {\n      stream.emit('progress', segment.size, segment.num, totalSegments);\n    });\n    pipeAndSetEvents(req, stream, shouldEnd);\n  } else {\n    const requestOptions = Object.assign({}, options.requestOptions, {\n      maxReconnects: 6,\n      maxRetries: 3,\n      backoff: { inc: 500, max: 10000 },\n    });\n\n    let shouldBeChunked = dlChunkSize !== 0 && (!format.hasAudio || !format.hasVideo);\n\n    if (shouldBeChunked) {\n      let start = (options.range && options.range.start) || 0;\n      let end = start + dlChunkSize;\n      const rangeEnd = options.range && options.range.end;\n\n      contentLength = options.range ?\n        (rangeEnd ? rangeEnd + 1 : parseInt(format.contentLength)) - start :\n        parseInt(format.contentLength);\n\n      const getNextChunk = () => {\n        if (!rangeEnd && end >= contentLength) end = 0;\n        if (rangeEnd && end > rangeEnd) end = rangeEnd;\n        shouldEnd = !end || end === rangeEnd;\n\n        requestOptions.headers = Object.assign({}, requestOptions.headers, {\n          Range: `bytes=${start}-${end || ''}`,\n        });\n\n        req = miniget(format.url, requestOptions);\n        req.on('data', ondata);\n        req.on('end', () => {\n          if (stream.destroyed) { return; }\n          if (end && end !== rangeEnd) {\n            start = end + 1;\n            end += dlChunkSize;\n            getNextChunk();\n          }\n        });\n        pipeAndSetEvents(req, stream, shouldEnd);\n      };\n      getNextChunk();\n    } else {\n      // Audio only and video only formats don't support begin\n      if (options.begin) {\n        format.url += `&begin=${parseTimestamp(options.begin)}`;\n      }\n      if (options.range && (options.range.start || options.range.end)) {\n        requestOptions.headers = Object.assign({}, requestOptions.headers, {\n          Range: `bytes=${options.range.start || '0'}-${options.range.end || ''}`,\n        });\n      }\n      req = miniget(format.url, requestOptions);\n      req.on('response', res => {\n        if (stream.destroyed) { return; }\n        contentLength = contentLength || parseInt(res.headers['content-length']);\n      });\n      req.on('data', ondata);\n      pipeAndSetEvents(req, stream, shouldEnd);\n    }\n  }\n\n  stream._destroy = () => {\n    stream.destroyed = true;\n    req.destroy();\n    req.end();\n  };\n};\n\n\n/**\n * Can be used to download video after its `info` is gotten through\n * `ytdl.getInfo()`. In case the user might want to look at the\n * `info` object before deciding to download.\n *\n * @param {Object} info\n * @param {!Object} options\n * @returns {ReadableStream}\n */\nytdl.downloadFromInfo = (info, options) => {\n  const stream = createStream(options);\n  if (!info.full) {\n    throw Error('Cannot use `ytdl.downloadFromInfo()` when called ' +\n      'with info from `ytdl.getBasicInfo()`');\n  }\n  setImmediate(() => {\n    downloadFromInfoCallback(stream, info, options);\n  });\n  return stream;\n};\n"],
  "mappings": "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",
  "names": ["s", "setTimeout", "url", "setTimeout", "info"]
}
